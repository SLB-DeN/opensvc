#
# Template etc/node.conf
#
#   This configuration file describes node-wide parameters.
#
#   The interval-days-period tuple is used to tune the schedule of
#   jobs run by the 'opensvc' cron-job.
#
#   This file can be left empty except for node.host_mode. The sync
#   schedule is autogenerated, based on the schedules described in the
#   sync#* resources defined in the service configurations. So no
#   sync schedule should be explicitely defined here.
#
#   The internal schedule defaults for sync and push* actions are:
#     days:     all
#     period:   4am to 6am
#     interval: 1 day
#
#   The internal schedule defaults for 'compliance check' action are:
#     days:     sunday
#     period:   5am to 6am
#     interval: 1 week
#
#   Schedule parameters details:
#     interval
#        type: integer
#        unit: minutes
#     days
#        type: json list
#        unit: weekday in C locale (%A)
#     period
#        type: json list or list of list
#        unit: %H:%M
#

[node]
#
# A PRD host mode will only allow PRD services to run. A not-PRD mode
# allows any service to run.
#
;host_mode = DEV

#
# The team responsible set here will be pushed to the collector's asset
# table. An admin allowed to edit opensvc configuration files on a node
# can set this team_responsible and gain the edit privilege on the asset
# in the collector.
#
;team_responsible = Homies

#
# The clusters this node is a member of. If the node is member of a
# single cluster, the services inherit from the clustername. Otherwise,
# each service can set its own cluster name using the 'cluster' service
# parameter. This parameter is optional.
#
;clusters = clu1 clu2

#
# You can optionally define asset information. They will be pushed to the
# collector, so that the compliance ruleset can use this information just
# after opensvc is bootstraped.
#
# A postinstall workflow would look like this: 
#
#   vanilla install
#   install opensvc
#   nodemgr set --param node.loc_city = Paris
#   nodemgr set --param node.team_responsible = Homies
#   nodemgr pushasset --force
#   nodemgr compliance attach moduleset --moduleset sys.core
#   nodemgr compliance fix
#
;loc_country = France
;loc_city = Paris
;loc_zip = 75017
;loc_addr = 7 rue blanche
;loc_building = crystal
;loc_floor = 21
;loc_room = 102
;loc_rack = R42

#
# Set the uri of the collectors' xmlrpc servers
# Default values as example.
#
;dbopensvc = https://collector.opensvc.com/feed/default/call/xmlrpc
;dbcompliance = https://collector.opensvc.com/init/compliance/call/xmlrpc

#
# 'repo'
#   Set the uri of the opensvc agent package repository and compliance
#   modules gzipped tarball repository. This parameter is used by
#   'nodemgr updatepkg' and 'nodemgr updatecomp' commands
#
# ROOT
# +- compliance
#  +- compliance.tar.gz
#  +- current -> compliance.tar.gz
# +- packages
#  +- deb
#  +- depot
#  +- pkg
#  +- rpms
#   +- current -> opensvc-1.4-49.rpm
#   +- opensvc-1.4-48.rpm
#   +- opensvc-1.4-49.rpm
#   +- opensvc-1.4-50.rpm
#  +- tbz
#
;repo = http://opensvc.repo.corp

#
# 'repopkg'
#   Set the uri of the opensvc agent package repository. This parameter
#   is used by'nodemgr updatepkg' command. The repository file tree must
#   be organized as:
#
# ROOT
# +- deb
# +- depot
# +- pkg
# +- rpms
#  +- current -> opensvc-1.4-49.rpm
#  +- opensvc-1.4-48.rpm
#  +- opensvc-1.4-49.rpm
#  +- opensvc-1.4-50.rpm
# +- tbz
#
;repopkg = http://repo.opensvc.com

#
# 'repocomp'
#   Set the uri of the opensvc compliance modules gzipped tarbal repository.
#   This parameter is used by'nodemgr updatecomp' command.
#
# ROOT
# +- compliance.tar.gz
# +- current -> compliance.tar.gz
#
;repocomp = http://repo.opensvc.com

#
# 'ruser'
#   Set the remote user to use to login to a remote node with ssh and
#   rsync. The remote user must have the privileges to run as root the
#   following commands on the remote node:
#    - nodemgr
#    - svcmgr
#    - rsync
#   The default ruser is root for all nodes. ruser accepts a list of
#   user[@node] ... If @node is ommited, user is considered the new
#   default user
#
;ruser = opensvc
;ruser = root opensvc@node1
;ruser = usr1@node1 usr2@node2 usr3@node3

#
# Schedule parameters for the 'compliance check' node action
#
[compliance]
;interval = 1439
;period = ["00:00", "23:59"]
;days = ["saturday", "sunday"]

#
# 'auto_update'
#   Boolean. Default False.
#   If set to True, and if the execution context indicates a scheduled run,
#   execute 'updatecomp' upon 'compliance check'. 
#   This toggle helps keep the compliance modules in sync with the reference
#   repository. Beware of the security impact of this setting: you must be
#   careful your module repository is kept secure from malevolents.
#
;auto_update = False

[stats]
;interval = 30
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[checks]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[packages]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[patches]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[asset]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[sym]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[svcconf]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[appinfo]
;interval = 120
;period = [["04:00", "08:00"], ["23:00", "01:30"]]
;days = ["saturday", "sunday"]

[rotate_root_pw]
;interval = 361
;period = ["08:00", "13:00"]
;days = ["monday","tuesday","wednesday","thursday","friday","saturday","sunday"]

