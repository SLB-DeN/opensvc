#
# OpenSVC config files are written in standard ini file format:
#
# "The configuration file consists of sections, led by a [section] header and
# followed by name: value entries, with continuations in the style of RFC 822
# (see section 3.1.1, “LONG HEADER FIELDS”); name=value is also accepted. Note
# that leading whitespace is removed from values.
# Lines beginning with '#' or ';' are ignored and may be used to provide
# comments."
#               extract from http://docs.python.org/library/configparser.html
#
# Resource are label [resource_name#index_in_resourse_set], like [ip#1],
# [ip#2], [fs#1], [fs#2]...
#
# Every resource accept two options:
# 'disable'
#   optional. Possible values are 'true' or 'false'.
#   A disabled resource will be ignored on service startup and shutdown.
#
# 'optional'
#   optional. Possible values are 'true' or 'false'.
#   Actions on resource will be tried upon service startup and shutdown,
#   but action failures will be logged and passed over. Useful for resources
#   like dump filesystems for example.
#

#
# Every service config file must have a default section.
#
[default]
#
# 'app'
#   is used to identify who is responsible for is service, who is billable
#   and provides a most useful filtering key. Better keep it a short code.
#
;app = OSVC

#
# 'comment'
#   is optional, but helps users understand the role of the service, 
#   which is nice to on-call support people having to operate on a
#   service they are usualy responsible for.
#
;comment = opensvc web front-end

#
# 'mode'
#   supported modes are 'lxc', 'zone' or 'hosted'. The default is 'hosted'.
#   the mode decides upon disposition OpenSVC takes to bring a service up
#   or down : 'lxc' and 'zone' need a special action to prepare and boot the
#   container for example, which is not needed for 'hosted' services.
#
;mode = lxc

#
# 'drp_type'
#   supported values are 'standby' or 'srdf'. The default is 'standby'.
#   Not used for the moment.
#
;drp_type = standby

#
# 'service_type'
#   supported values are 'DEV' and 'PRD'. There is no default, and this
#   setting is mandatory, as important rules apply to it :
#   1/ a DEV service can not be brought up on a PRD node, but a PRD service
#      can be startup on a DEV node (in a DRP situation).
#
;service_type = DEV

#
# 'nodes'
#   mandatory list of cluster nodes able to start the service when not in
#   a DRP situation
#
;nodes =  zezette

#
# 'autostart_node'
#   the node from 'nodes' where the service will try to start on upon node
#   reboot. The start-up will fail if the service is already up on another
#   node though.
#   If not specified, the service will never be started at node boot-time,
#   which is rarely the expected behaviour.
#
;autostart_node = zezette

#
# 'drpnode'
#   optional. The backup node where the service is activated in a DRP
#   situation. This node is also a data synchronization target for 'sync'
#   resources (see below)
#
;drpnode = vm5

#
# 'drpnodes'
#   optional. Alternate backup nodes, where the service could be activated
#   in a DRP situation if the 'drpnode' is not available. These nodes are
#   also data synchronization targets for 'sync' resources (see below)
#
;drpnodes = vm6 vm7

#
# 'rsh' 'rcp'
#   the commands used to trigger remote executions of system commands on
#   'nodes' and 'drpnodes'.
#
;rsh = /usr/bin/ssh -o StrictHostKeyChecking=no -o ForwardX11=no -o PasswordAuthentication=no -o ConnectTimeout=10
;rcp = /usr/bin/scp -o StrictHostKeyChecking=no -o ForwardX11=no -o PasswordAuthentication=no -o ConnectTimeout=10

#
# 'scsireserv'
#   optional. Possible values are 'true' or 'false'. Default is 'false'.
#   If set to 'true', OpenSVC will try to acquire a type-5 (write exclusive,
#   registrant only) scsi3 persistent reservation on every path to disks of
#   every disk group attached to this service. Existing reservations are
#   preempted to not block service start-up. If the start-up was not
#   legitimate the data are still protected from being written over from both
#   nodes.
#   If set to 'false' or not set, 'scsireserv' can be activated on a per-
#   resource basis.
#
;scsireserv = false

#
# 'bwlimit'
#   optional. Bandwidth limit in KB applied to all rsync transfers
#
;bwlimit = 3000


#
# 'ip' resources
#   describe which ip to plumb for the service. Any number of ips can be
#   attached to the service, but ips are to be uniquely assigned to it.
#   In case of ip conflict, the service refuses to start.
#
;[ip#1]
;disable = true
;optional = true

#
# 'ipname'
#   the DNS name of the ip resource. Can be different from one node to the
#   other, in which case '@nodename' can be specified. This is most
#   useful to specify a different ip when the service starts in DRP mode,
#   where subnets are likely to be different than those of the production
#   datacenter.
#
;ipname@zezette = unxdevweb
;ipname@vm5 = unxdrpweb

#
# 'ipdev'
#   the interface name over which OpenSVC will try to stack the service
#   ip. Can be different from one node to the other, in which case the
#   '@nodename' can be specified.
#
;ipdev@zezette = br0
;ipdev@vm5 = eth0

#
# 'netmask'
#   optional if an ip is already plumbed on the root interface (if which
#   case the netmask is deduced from this ip). Mandatory if the interface
#   is dedicated to the service (dummy interface are likely to be in this
#   case).
#   the format is decimal, ex: 255.255.252.0
#
;netmask = 255.255.255.0


#
# 'sync' resource
#   describes a rsync-based data synchronization job. By default the sync
#   is run daily.
#
;[sync#1]
;disable = true
;optional = true

#
# 'src'
#   source of the sync. Can be a whitespace-separated list of files or dirs
#   passed as-is to rsync. Beware of the meaningful ending '/'. Refer to
#   the rsync man page for details.
#
;src = /unxdevweb/

#
# 'dst'
#   destination of the sync. Beware of the meaningful ending '/'. Refer to
#   the rsync man page for details.
#
;dst = /unxdevweb

#
# 'exclude'
#   optional. A whitespace-separated list of --exclude params passed unchanged
#   to rsync.
#
;exclude = --exclude=cache

#
# 'target'
#   mandatory. Possible values are 'nodes', 'drpnodes' or 'nodes drpnodes'.
#   Describes which nodes should receive this data sync from the PRD node
#   where the service is up and running.
#
#   SAN storage shared 'nodes' must not be sync to 'nodes'.
#   SRDF-like paired storage must not be sync to 'drpnodes'.
#
;target = nodes drpnodes

#
# 'snap'
#   optional. Possible values are 'true' or 'false'. Default is 'false'.
#   If set to true, OpenSVC will try to snapshot the first snapshottable
#   parent of the source of the sync and try to sync from the snap.
#
;snap = true

#
# 'dstfs'
#   optional. If set to a remote mount point, OpenSVC will verify that the
#   specified mount point is really hosting a mounted FS. This can be used
#   as a safety net to not overflow the parent FS (may be root).
#
;dstfs = /remote/dir

#
# 'bwlimit'
#   optional. Bandwidth limit in KB applied to this rsync transfer. Takes
#   precedence over 'bwlimit' set in [default].
#
;bwlimit = 3000



#
# 'vg' resource
#   Disk group in the sense of volume managers, whatever the implementation.
#   Attaching a 'vg' to a service will make OpenSVC check and drive its
#   imported/exported status.
#
;[vg#1]
;disable = true
;optional = true

#
# 'vgname'
#   nothing special there
#
;vgname = unxtstsvc02

#
# 'scsireserv'
#   optional. Possible values are 'true' or 'false'. Default is 'false'.
#   If set to 'true', OpenSVC will try to acquire a type-5 (write exclusive,
#   registrant only) scsi3 persistent reservation on every path to disks of
#   every disk group attached to this service. Existing reservations are
#   preempted to not block service start-up. If the start-up was not
#   legitimate the data are still protected from being written over from both
#   nodes.
#   If set to 'false' or not set, 'scsireserv' can still be activated globally
#   from the 'default' section.
#
;scsireserv = false


#
# 'fs' resource
#   describes filesystems to mount on service startup and umount on service
#   shutdown.
#   The options are aligned to the Unix fstab fields. Whatever is possibly
#   described in the fstab should be supported in there.
#
;[fs#1]
;disable = true
;optional = true
;dev = /opt/unxtstsvc01.img
;mnt = /opt/unxtstsvc01
;mnt_opt = rw,loop
;type = ext4


#
# 'loop' resource
#   linux-only.
#   describes a loop device attached to the service. startup triggers the
#   allocation of a block device (usualy major 7) mapped over the specified
#   file. The created loop dev can be used to stack disk group also attached
#   to the service.
#
;[loop#1]
;disable = true
;optional = true
;file = /opt/unxtstsvc02.img

