##############################################################################
#                                                                            #
# DEFAULT                                                                    #
#                                                                            #
##############################################################################

[DEFAULT#rindex]
#
# keyword:          alt_names
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#  convert:         list
#
#  desc:  Certificate Signing Request Alternative Domain Names.
#
;alt_names = www.opensvc.com opensvc.com

#
# keyword:          bits
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         4096
#  scope order:     specific > generic
#  convert:         size
#
#  desc:  Certificate Private Key Length.
#
;bits = 4096

#
# keyword:          c
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request Country.
#
;c = france

#
# keyword:          ca
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  The name of secret containing a certificate to use as a Certificate
#         Authority. This secret must be in the same namespace.
#
;ca = ca

#
# keyword:          cn
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request Common Name.
#
;cn = foo

#
# keyword:          comment
# ----------------------------------------------------------------------------
#  scopable:        False
#  required:        False
#  default:         
#  scope order:     specific > generic
#
#  desc:  Helps users understand the role of the service and resources, which
#         is nice to on-call support people having to operate on a service
#         they are not usually responsible for.
#
;comment = 

#
# keyword:          disable
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         False
#  scope order:     specific > generic
#  candidates:      True | False
#  convert:         boolean
#
#  desc:  A disabled resource will be ignored on service startup and shutdown.
#         Its status is always reported ``n/a``.  Set in DEFAULT, the whole
#         service is disabled. A disabled service does not honor start and
#         stop actions. These actions immediately return success.  :cmd:`sudo
#         svcmgr -s <path> disable` only sets :kw:`DEFAULT.disable`. As
#         resources disabled state is not changed, :cmd:`sudo svcmgr -s <path>
#         enable` does not enable disabled resources.
#
;disable = False

#
# keyword:          drpnodes
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         
#  scope order:     specific > generic
#  convert:         list_lower
#
#  desc:  Alternate backup nodes, where the service could be activated in a
#         DRP situation if the 'drpnode' is not available. These nodes are
#         also data synchronization targets for 'sync' resources.
#
;drpnodes = 

#
# keyword:          email
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request Email.
#
;email = test@opensvc.com

#
# keyword:          env
# ----------------------------------------------------------------------------
#  scopable:        False
#  required:        False
#  default:         <same as node env>
#  scope order:     specific > generic
#  candidates:      DEV | DRP | FOR | INT | PRA | PRD | PRJ | PPRD | REC | STG | TMP | TST | UAT
#
#  desc:  A non-PRD service can not be brought up on a PRD node, but a PRD
#         service can be startup on a non-PRD node (in a DRP situation). The
#         default value is the node env.
#
;env = <same as node env>

#
# keyword:          grant
# ----------------------------------------------------------------------------
#  scopable:        False
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Grant roles on namespaces to the user. A whitespace-separated list
#         of root|squatter|blacklistadmin|<role selector>:<namespace
#         selector>, where role selector is a comma-separated list of role in
#         admin,operator,guest and the namespace selector is a glob pattern
#         applied to existing namespaces. The root role is required to add
#         resource triggers and non-containerized resources other than
#         (container.docker, container.podman task.docker, task.podman and
#         volume). The squatter role is required to create a new namespace.
#         The admin role is required to create, deploy and delete objects. The
#         guest role is required to list and read objects configurations and
#         status.
#
;grant = admin:test* guest:*

#
# keyword:          id
# ----------------------------------------------------------------------------
#  scopable:        False
#  required:        False
#  default:         <random uuid>
#  scope order:     specific > generic
#
#  desc:  A RFC 4122 random uuid generated by the agent. To use as reference
#         in resources definitions instead of the service name, so the service
#         can be renamed without affecting the resources.
#
;id = <random uuid>

#
# keyword:          l
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request Location.
#
;l = gouvieux

#
# keyword:          lock_timeout
# ----------------------------------------------------------------------------
#  scopable:        False
#  required:        False
#  default:         60
#  scope order:     specific > generic
#  convert:         duration
#
#  desc:  A duration expression, like '1m30s'. The maximum wait time for the
#         action lock acquire. The :cmd:`svcmgr --waitlock` option overrides
#         this parameter.
#
;lock_timeout = 60

#
# keyword:          nodes
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         <hostname of the current node>
#  scope order:     specific > generic
#  convert:         nodes_selector
#
#  desc:  A node selector expression specifying the list of cluster nodes
#         hosting service instances.
#
;nodes = <hostname of the current node>

#
# keyword:          o
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request Organization.
#
;o = opensvc

#
# keyword:          ou
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request Organizational Unit.
#
;ou = lab

#
# keyword:          st
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         None
#  scope order:     specific > generic
#
#  desc:  Certificate Signing Request State.
#
;st = oise

#
# keyword:          validity
# ----------------------------------------------------------------------------
#  scopable:        True
#  required:        False
#  default:         365d
#  scope order:     specific > generic
#  convert:         duration_to_day
#
#  desc:  Certificate Validity duration.
#
;validity = 365d

