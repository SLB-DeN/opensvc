SUMMARY="Automation and configuration management agent"
DESCRIPTION="The agent provisions, starts, stops, monitors and relocates applications
described as OpenSVC services. It centralizes nodes discovery and handles
nodes and services configuration management. It tracks system configuration
changes."

umask 022

function changelog {
	git log -n 100 --pretty=format:"* %ad %an <%ae>%n- %s" | \
	# strip tz
	sed -e "s/ [+\-][0-1][0-9][0-5][0-9] / /g" | \
	# strip time
	sed -e "s/ [0-1][0-9]:[0-5][0-9]:[0-5][0-9] / /g" | \
	awk -v BRANCH=$BRANCH 'BEGIN{cmd="git describe --tags " BRANCH ; cmd | getline rev; split(rev, a, "-"); rev=a[2]}{if (rev<0){exit};if (/^\* /){print $0 " - " a[1] "-" rev} else {print; rev=rev-1}}'
}

function date_to_release {
	/opt/opensvc/bin/python -c "import datetime ; print(datetime.datetime.fromtimestamp($1).strftime('%y%m%d.%H%M'))"
}

#OFFSET=10000
HEAD=$(git log -1 --pretty=format:%at || exit 1)
VERSION=$(git describe --tags --abbrev=0)
RELEASE=$(git describe --tags|cut -d- -f2)

MASTER=0
git branch | grep "\* master" >/dev/null 2>&1 && MASTER=1

#if [ $MASTER -eq 1 ] ; then
#	let RELEASE=$RELEASE+$OFFSET
#fi

[ "$RELEASE" == "$VERSION" ] && RELEASE=0

OSVC=$PATH_SCRIPT/../..
CHROOT_BN=opensvc-$VERSION-$RELEASE.noarch
CHROOT=$OSVC/tmp/BUILDROOT/$CHROOT_BN

if [ "$(uname)" == "SunOS" -a -x /usr/xpg4/bin/id ] ; then
	ID_BIN="/usr/xpg4/bin/id"
else
	ID_BIN="id"
fi

if [ "$($ID_BIN -u)" == "0" ] ; then
	SUDO=""
else
	SUDO="sudo"
fi

function prepare_chroot {
	#
	# prepare skeleton (data.tar.gz)
	#
	echo $CHROOT | grep noarch >/dev/null 2>&1 && $SUDO rm -rf $CHROOT

	mkdir -p $CHROOT/opt/opensvc

	# install tracked files
	cd $OSVC || return 1
	git archive --format=tar HEAD | ( cd $CHROOT/opt/opensvc && tar xf - )

	# install version.py
	echo "version = \"$VERSION-$RELEASE\"" | tee $CHROOT/opt/opensvc/lib/version.py || return 1

	# compress docs
	cd $CHROOT/opt/opensvc/usr/share/doc
	for f in $(echo template*env)
	do
		echo "gzip -n $f"
		gzip -n $f
	done

	# purge unwanted files
	cd /tmp
	rm -rf $CHROOT/opt/opensvc/bin/pkg
	rm -f $CHROOT/opt/opensvc/bin/postinstall.cmd

	# move files to LSB locations
	mkdir -p $CHROOT/usr/bin
	mkdir -p $CHROOT/etc/opensvc
	mkdir -p $CHROOT/var/log/opensvc
	mkdir -p $CHROOT/var/lib/opensvc/cache
	mkdir -p $CHROOT/usr/share/opensvc
	mkdir -p $CHROOT/usr/share/doc/opensvc
	mkdir -p $CHROOT/etc/bash_completion.d
	mv $CHROOT/opt/opensvc/bin $CHROOT/usr/share/opensvc/
	mv $CHROOT/opt/opensvc/lib $CHROOT/usr/share/opensvc/
	mv $CHROOT/opt/opensvc/var/compliance $CHROOT/var/lib/opensvc/
	mv $CHROOT/opt/opensvc/usr/share/doc/* $CHROOT/usr/share/doc/opensvc/
	mv $CHROOT/opt/opensvc/usr/share/bash_completion.d/opensvc $CHROOT/etc/bash_completion.d/
	ln -sf ../share/opensvc/bin/opensvc $CHROOT/usr/bin/svcmgr
	ln -sf ../share/opensvc/bin/opensvc $CHROOT/usr/bin/nodemgr
	ln -sf ../share/opensvc/bin/opensvc $CHROOT/usr/bin/svcmon

	# purge unwanted files
	rm -rf $CHROOT/opt/opensvc

	cd $OSVC
	$SUDO chown -Rh 0:0 $CHROOT/* || return 1
	$SUDO find $CHROOT -type d -exec $SUDO chmod 755 {} \; || return 1

	return 0
}

