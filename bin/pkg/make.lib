function changelog {
        git log --pretty=format:"* %ad - %ae%n- %s" | sed -e "s/ [0-9]*:[0-9]*:[0-9]*//" -e "s/ +[0-9]* -/ -/"
}

function date_to_release {
	/opt/opensvc/bin/python -c "import datetime ; print(datetime.datetime.fromtimestamp($1).strftime('%y%m%d.%H%M'))"
}

OFFSET=10000
HEAD=$(git log -1 --pretty=format:%at || exit 1)
VERSION=$(git describe --tags --abbrev=0)
RELEASE=$(git describe --tags|cut -d- -f2)

MASTER=0
git branch | grep "\* master" >/dev/null 2>&1 && MASTER=1
if [ $MASTER -eq 1 ] ; then
	let RELEASE=$RELEASE+$OFFSET
else
	RELEASE=$(git describe --tags|cut -d- -f2)
        if [ "$RELEASE" = "$VERSION" ] ; then
            RELEASE="0"
        fi   
fi
OSVC=$PATH_SCRIPT/../..
CHROOT_BN=opensvc-$VERSION-$RELEASE.noarch
CHROOT=$OSVC/tmp/BUILDROOT/$CHROOT_BN

if [ "$(uname)" == "SunOS" -a -x /usr/xpg4/bin/id ] ; then
	ID_BIN="/usr/xpg4/bin/id"
else
	ID_BIN="id"
fi

if [ "$($ID_BIN -u)" == "0" ] ; then
	SUDO=""
else
	SUDO="sudo"
fi

function prepare_chroot {
	#
	# prepare skeleton (data.tar.gz)
	#
	[ "${CHROOT%%noarch}" != "$CHROOT" ] && $SUDO rm -rf $CHROOT
	mkdir -p $CHROOT/opt/opensvc/etc || return 1
	mkdir -p $CHROOT/opt/opensvc/var || return 1
	mkdir -p $CHROOT/opt/opensvc/log || return 1
	mkdir -p $CHROOT/opt/opensvc/tmp || return 1
	mkdir -p $CHROOT/opt/opensvc/var/cache || return 1

	# install tracked files
	EXCL=
	EXCL="$EXCL --exclude=.be/"
	EXCL="$EXCL --exclude=bin/pkg"
	EXCL="$EXCL --exclude=bin/sssu"
	EXCL="$EXCL --exclude=bin/python"
	EXCL="$EXCL --exclude=*.pyc"
	EXCL="$EXCL --exclude='log/*'"
	EXCL="$EXCL --exclude='etc/*'"
	EXCL="$EXCL --exclude='etc/.*'"
	EXCL="$EXCL --exclude='tmp/*'"
	EXCL="$EXCL --exclude=var/host_mode"
	EXCL="$EXCL --exclude=var/last_comp_check*"
	EXCL="$EXCL --exclude=var/*push"
	EXCL="$EXCL --exclude='var/lock/*'"
	EXCL="$EXCL --exclude='var/cache/*'"
	EXCL="$EXCL --exclude=lib/rcLocalEnv.py"
	EXCL="$EXCL --exclude=*.swp"
	cd $OSVC || return 1
	tar cf - $EXCL bin lib usr var/compliance/*com.opensvc* | tar xf - -C $CHROOT/opt/opensvc || return 1
	echo "version = \"$VERSION-$RELEASE\"" > $CHROOT/opt/opensvc/lib/version.py || return 1
        $SUDO chown -R 0:0 $CHROOT/opt/opensvc || return 1
	return 0
}

