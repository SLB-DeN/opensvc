#!/usr/bin/python2.6

import os
import shutil
from subprocess import *

def install_cron():
    """install opensvc cron jobs
    """
    cron_entry_1 = "0,10,20,30,40,50 * * * * [ -x /usr/local/opensvc/bin/svcmon ] && /usr/local/opensvc/bin/svcmon --updatedb >/dev/null 2>&1"
    cron_entry_2 = "0 4 * * * [ -x /usr/local/opensvc/bin/cron/opensvc.daily ] && /usr/local/opensvc/bin/cron/opensvc.daily >/dev/null 2>&1"

    root_crontab = False
    root_crontab_locs = ['/var/spool/cron/crontabs/root',
                         '/var/spool/cron/root']
    for loc in root_crontab_locs:
        if os.path.exists(loc):
            root_crontab = loc
            break
    if not root_crontab:
        print "no root crontab found in usual locations"
        return False

    new = False
    with open(root_crontab, 'r') as f:
        new = [line for line in f if ' /service/bin/' not in line and ' /usr/local/opensvc/bin' not in line]
        new.append(cron_entry_1+'\n')
        new.append(cron_entry_2+'\n')
    if not new:
        print "problem preparing the new crontab"
        return False
 
    with open(root_crontab, 'w') as f:
        f.write(''.join(new))

    for f in ['/etc/cron.daily/opensvc', '/etc/cron.daily/opensvc.daily']:
        if os.path.exists(f):
            os.unlink(f)

def activate_redhat():
    cmd = ['chkconfig', '--add', 'opensvc']
    process = Popen(cmd, stdout=PIPE, stderr=PIPE, close_fds=True)
    buff = process.communicate()
    if process.returncode > 0:
        print buff[1]
        return False
    return True

def activate_debian():
    cmd = ['update-rc.d', '-f', 'opensvc', 'remove']
    process = Popen(cmd, stdout=PIPE, stderr=PIPE, close_fds=True)
    buff = process.communicate()
    if process.returncode > 0:
        print buff[1]
        return False
    cmd = ['update-rc.d', 'opensvc', 'defaults']
    process = Popen(cmd, stdout=PIPE, stderr=PIPE, close_fds=True)
    buff = process.communicate()
    if process.returncode > 0:
        print buff[1]
        return False
    return True


def install_rc():
    """install startup script
    """
    rc = '/etc/init.d/opensvc'

    if os.path.exists('/etc/debian_version'):
        src = '/usr/local/opensvc/bin/opensvc.init.debian'
        activate = activate_debian
    elif os.path.exists('/etc/redhat-release'):
        src = '/usr/local/opensvc/bin/opensvc.init.redhat'
        activate = activate_redhat
    else:
        print "could not select an init script: unsupported operating system"
        return False

    if os.path.islink(rc):
        os.unlink(rc)

    shutil.copyfile(src, rc)
    os.chmod(rc, 0755)
    activate()

def gen_keys():
    if os.path.exists("/root/.ssh/id_dsa.pub") or os.path.exists("/root/.ssh/id_dsa"):
        return
    cmd = ['ssh-keygen', '-t', 'dsa', '-b', '1024', '-P', '', '-f', '/root/.ssh/id_dsa']
    process = Popen(cmd, stdout=PIPE, stderr=PIPE, close_fds=True)
    buff = process.communicate()

install_cron()
install_rc()
gen_keys()
